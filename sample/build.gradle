plugins {
    id 'com.android.application'
}

android {
    namespace "org.smartregister.malaria.sample"
    compileSdk androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion
    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        // Use a unique applicationId to avoid BuildConfig clashes with the library module
        applicationId "org.smartregister.malaria.sample"
        minSdkVersion 28
        targetSdk androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "DATABASE_VERSION", '1'
        }

        debug {
            buildConfigField "int", "DATABASE_VERSION", '1'
        }
    }


    packaging {
        resources {
            excludes += [
                'META-INF/DEPENDENCIES.txt',
                'META-INF/LICENSE.txt',
                'META-INF/LICENSE.md',
                'META-INF/NOTICE.txt',
                'META-INF/NOTICE.md',
                'META-INF/NOTICE',
                'META-INF/LICENSE',
                'META-INF/DEPENDENCIES',
                'META-INF/INDEX.LIST',
                'META-INF/notice.txt',
                'META-INF/license.txt',
                'META-INF/dependencies.txt',
                'META-INF/LGPL2.1',
                'META-INF/AL2.0',
                'LICENSE.txt'
            ]
        }
    }

    lint {
        checkReleaseBuilds false
        disable 'MissingTranslation'
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }
}

// Ensure duplicate native lib from SQLCipher new artifact is excluded
configurations.configureEach {
    exclude group: 'net.zetetic', module: 'sqlcipher-android'
}


dependencies {
    // Library under development
    implementation(project(":opensrp-chw-malaria"))

    // Explicitly depend on core libs that Sample code references directly
    implementation('io.github.bluecodesystems:opensrp-client-core:6.2.2') {
        exclude group: 'net.zetetic', module: 'sqlcipher-android'
    }
    implementation 'com.github.BlueCodeSystems:opensrp-client-configurable-views:v2.0.1'

    // AndroidX libs for sample code
    implementation 'androidx.media:media:1.6.0'
    implementation 'androidx.core:core:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.sqlite:sqlite:2.3.1'

    implementation 'de.hdodenhof:circleimageview:3.1.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    // Core library desugaring for Java 8+ APIs on minSdk < 26
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'

    // SQLCipher - referenced directly by SampleRepository
    // Prefer legacy coordinate to provide SQLiteOpenHelper class
    // Some older classes may still resolve from the legacy coordinate
    implementation 'net.zetetic:android-database-sqlcipher:4.5.4'
}
